let mapLines = cat ${scriptPath}/input.txt | into::list

let y = mapLines | iter::findIndex => &iter::contains("^")
let x = mapLines[y] | iter::indexOf("^")

let visitedPositions = into::set()
let movement = (0, -1)
while x in 0..len(mapLines[0]) and y in 0..len(mapLines) {
    visitedPositions | push((x, y))

    let newLine = mapLines | iter::at(y + movement[1])
    break if newLine == nil

    let newChar = newLine | iter::at(x + movement[0])
    break if newChar == nil

    movement = rotate(movement) if newChar == "#"
    x += movement[0]
    y += movement[1]
}

fn rotate(orientation) {
    return (-1, 0) if orientation == (0, 1)
    return (1, 0) if orientation == (0, -1)
    return (0, 1) if orientation == (1, 0)
    return (0, -1) if orientation == (-1, 0)
}

visitedPositions
    | len
    | assertEqual(351)
