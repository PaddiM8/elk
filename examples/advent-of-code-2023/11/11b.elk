#!/usr/bin/env elk

fn findExpanable(lines) {
    lines
        | withIndex
        | where => entry {
            entry[0] | iter::allOf => c: c == "."
        }
        | map => entry: entry[1]
        | into::set
}

let universe = cat ${scriptPath}/input.txt
let expandedLines = universe | findExpanable

let width = universe | iter::first | len
let expandedColumns = 0..width
    | map => i {
        universe | map => &iter::at(i)
    }
    | findExpanable

let galaxies = []
for (line, y) in universe | withIndex {
    for (c, x) in line | withIndex {
        galaxies | push((x, y)) if c == "#"
    }
}

let totalDistance = 0
for (g1, i) in galaxies | withIndex {
    for g2 in galaxies | iter::skip(i + 1) {
        let (x1, x2) = (g1[0], g2[0]) | sort::asc
        let (y1, y2) = (g1[1], g2[1]) | sort::asc
        totalDistance += x1..x2
            | iter::count => j: j in expandedColumns
            | op::mul(1000000 - 1)
        totalDistance += y1..y2
            | iter::count => j: j in expandedLines
            | op::mul(1000000 - 1)
        totalDistance += x2 - x1 + y2 - y1
    }
}

totalDistance | assertEqual(200078601414)
